{"version":3,"sources":["utils/sortData.js","utils/prettyPrint.js","components/InfoBox.js","components/LineGraph.js","components/Table.js","components/NavBar.js","utils/showDataOnMap.js","components/MapLight.js","components/MapDark.js","pages/App.js","utils/useDarkMode.js","index.js"],"names":["sortData","data","sort","a","b","cases","prettyPrint","stat","numeral","format","InfoBox","title","total","active","props","casesType","colors","Card","onClick","className","id","CardContent","Typography","color","casesTypeColors","hex","rgb","half_op","multiplier","recovered","deaths","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","LineGraph","useState","setData","useEffect","fetch","then","response","json","fetchData","length","datasets","backgroundColor","borderColor","Table","countries","map","country","NavBar","children","showDataOnMap","Circle","center","countryInfo","lat","long","pathOptions","fillColor","fillOpacity","Math","sqrt","Popup","style","backgroundImage","flag","ChangeMap","zoom","useMap","setView","MapLight","MapContainer","TileLayer","url","MapDark","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","lng","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountries","setMapCountries","setCasesType","theme","setTheme","colorTheme","root","window","document","documentElement","classList","remove","add","useDarkMode","isDarkMode","setIsDarkMode","name","iso2","sortedData","getCountriesData","onCountryChange","event","countryCode","target","size","onChange","checked","e","todayCases","todayRecovered","todayDeaths","enterAnimation","AnimationTypes","scale","enter","duration","exitAnimation","exit","charAt","toUpperCase","substring","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3c5c319e.chunk.js","sourcesContent":["export const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  return sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n};\r\n","import numeral from \"numeral\";\r\n\r\nexport const prettyPrint = (stat) =>\r\n  stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n","import { Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\n\r\nfunction InfoBox({ title, cases, total, active, casesType, ...props }) {\r\n  let colors = \"\";\r\n\r\n  if (title === \"Cases\") {\r\n    colors = \"border-t-4 border-red-500\";\r\n  } else if (title === \"Recovered\") {\r\n    colors = \"border-t-4 border-green-500\";\r\n  } else if (title === \"Deaths\") {\r\n    colors = \"border-t-4 border-blue-500\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        onClick={props.onClick}\r\n        className={`dark:bg-darkModeCards dark:text-white  flex-1 cursor-pointer mt-6 sm:mt-0 min-w-full sm:min-w-0`}\r\n        id=\"infoBox\"\r\n      >\r\n        <CardContent className={`${active && colors}`}>\r\n          <Typography color=\"textSecondary\" className=\"dark:text-textDarkMode\">\r\n            {title}\r\n          </Typography>\r\n          <h1 className={`cases`}>{cases}</h1>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            className=\"text-total total dark:text-textDarkMode\"\r\n          >\r\n            {total} Total\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InfoBox;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#EF4444\",\r\n    rgb: \"rgb(239, 68, 68)\",\r\n    half_op: \"rgba(239, 68, 68, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  recovered: {\r\n    hex: \"#10B981\",\r\n    rgb: \"rgb(16, 185, 129)\",\r\n    half_op: \"rgba(16, 185, 129, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  deaths: {\r\n    hex: \"#3B82F6\",\r\n    rgb: \"rgb(59, 130, 246)\",\r\n    half_op: \"rgba(59, 130, 246, 0.5)\",\r\n    multiplier: 600,\r\n  },\r\n};\r\n\r\nconst options = {\r\n  legend: {\r\n    display: false,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  let chartData = [];\r\n  let lastDataPoint;\r\n  for (let date in data.cases) {\r\n    if (lastDataPoint) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastDataPoint,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastDataPoint = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nfunction LineGraph({ casesType }) {\r\n  const [data, setData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let chartData = buildChartData(data, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: casesTypeColors[casesType].half_op,\r\n                borderColor: casesTypeColors[casesType].hex,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\n\r\nfunction Table({ countries }) {\r\n  return (\r\n    <div\r\n      className=\"mt-5 overflow-scroll h-96 w-full overflow-x-hidden text-tableGray odd:text-white \"\r\n      id=\"table\"\r\n    >\r\n      {countries.map(({ country, cases, index }) => (\r\n        <tr\r\n          key={index}\r\n          className=\"flex justify-between odd:bg-oddPairWhite dark:odd:bg-oddPair\"\r\n        >\r\n          <td key={index} className=\"p-2\">\r\n            {country}\r\n          </td>\r\n          <td key={index} className=\"p-2\">\r\n            <strong>{numeral(cases).format()}</strong>\r\n          </td>\r\n        </tr>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nfunction NavBar({ children }) {\r\n  return (\r\n    <div className=\"top-0 w-screen bg-white shadow-lg dark:bg-darkModeCards transition duration-500 dark:text-white\">\r\n      <div className=\"mx-auto \">\r\n        <div className=\"flex items-center justify-end p-4\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport numeral from \"numeral\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#EF4444\",\r\n    rgb: \"rgb(239, 68, 68)\",\r\n    half_op: \"rgba(239, 68, 68, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  recovered: {\r\n    hex: \"#10B981\",\r\n    rgb: \"rgb(16, 185, 129)\",\r\n    half_op: \"rgba(16, 185, 129, 0.5)\",\r\n    multiplier: 200,\r\n  },\r\n  deaths: {\r\n    hex: \"#3B82F6\",\r\n    rgb: \"rgb(59, 130, 246)\",\r\n    half_op: \"rgba(59, 130, 246, 0.5)\",\r\n    multiplier: 600,\r\n  },\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType = \"cases\") =>\r\n  data.map((country) => (\r\n    <Circle\r\n      center={[country.countryInfo.lat, country.countryInfo.long]}\r\n      pathOptions={{\r\n        color: casesTypeColors[casesType].hex,\r\n        fillColor: casesTypeColors[casesType].hex,\r\n      }}\r\n      fillOpacity={0.4}\r\n      radius={\r\n        Math.sqrt(country[casesType]) * casesTypeColors[casesType].multiplier\r\n      }\r\n    >\r\n      <Popup>\r\n        <div className=\"info-container\">\r\n          <div\r\n            className=\"info-flag\"\r\n            style={{ backgroundImage: `url(${country.countryInfo.flag})` }}\r\n          ></div>\r\n          <div className=\"info-name\">{country.country}</div>\r\n          <div className=\"info-confirmed\">\r\n            Cases: {numeral(country.cases).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-recovered\">\r\n            Recovered: {numeral(country.recovered).format(\"0,0\")}\r\n          </div>\r\n          <div className=\"info-deaths\">\r\n            Deaths: {numeral(country.deaths).format(\"0,0\")}\r\n          </div>\r\n        </div>\r\n      </Popup>\r\n    </Circle>\r\n  ));\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"../utils/showDataOnMap\";\r\n\r\nfunction ChangeMap({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\nfunction MapLight({ center, zoom, countries, casesType }) {\r\n  return (\r\n    <div\r\n      className={`h-96 bg-white p-4 rounded-2xl mt-4 shadow-lg map dark:bg-darkModeCards transition duration-1000`}\r\n      id=\"map\"\r\n    >\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <ChangeMap center={center} zoom={zoom} />\r\n        <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png?api_key=ea79ab91-7718-4ab6-b8e3-50a5402b94e5\" />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapLight;\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\nimport { showDataOnMap } from \"../utils/showDataOnMap\";\r\n\r\nfunction ChangeMap({ center, zoom }) {\r\n  const map = useMap();\r\n  map.setView(center, zoom);\r\n  return null;\r\n}\r\n\r\nfunction MapDark({ center, zoom, countries, casesType }) {\r\n  return (\r\n    <div\r\n      className={`h-96 bg-white p-4 rounded-2xl mt-4 shadow-lg map dark:bg-darkModeCards transition duration-1000`}\r\n      id=\"map\"\r\n    >\r\n      <MapContainer center={center} zoom={zoom}>\r\n        <ChangeMap center={center} zoom={zoom} />\r\n        <TileLayer url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=ea79ab91-7718-4ab6-b8e3-50a5402b94e5\" />\r\n        {showDataOnMap(countries, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MapDark;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport {\n  ComponentTransition,\n  AnimationTypes,\n} from \"react-component-transition\";\nimport { sortData } from \"../utils/sortData\";\nimport { prettyPrint } from \"../utils/prettyPrint\";\nimport InfoBox from \"../components/InfoBox\";\nimport LineGraph from \"../components/LineGraph\";\nimport Table from \"../components/Table\";\nimport NavBar from \"../components/NavBar\";\nimport MapLight from \"../components/MapLight\";\nimport MapDark from \"../components/MapDark\";\nimport DarkModeToggle from \"react-dark-mode-toggle\";\nimport useDarkMode from \"../utils/useDarkMode\";\n\nfunction App({}) {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 34.80746, lng: -40.4796 });\n  const [mapZoom, setMapZoom] = useState(3);\n  const [mapCountries, setMapCountries] = useState([]);\n  const [casesType, setCasesType] = useState(\"cases\");\n  const [colorTheme, setTheme] = useDarkMode();\n  const [isDarkMode, setIsDarkMode] = useState(() => false);\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((response) => response.json())\n      .then((data) => {\n        setCountryInfo(data);\n      });\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const countries = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2,\n          }));\n\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setMapCountries(data);\n          setCountries(countries);\n        });\n    };\n\n    getCountriesData();\n  }, []);\n\n  const onCountryChange = async (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    await fetch(url)\n      .then((response) => response.json())\n      .then((data) => {\n        setCountry(countryCode);\n        setCountryInfo(data);\n\n        setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n        setMapZoom(6);\n      });\n  };\n\n  const map =\n    colorTheme === \"dark\" ? (\n      <MapLight\n        center={mapCenter}\n        zoom={mapZoom}\n        countries={mapCountries}\n        casesType={casesType}\n        className=\"transition duration-1000\"\n      />\n    ) : (\n      <MapDark\n        center={mapCenter}\n        zoom={mapZoom}\n        countries={mapCountries}\n        casesType={casesType}\n        className=\"transition duration-1000\"\n      />\n    );\n\n  return (\n    <div className=\"relative dark:bg-darkModeBackground dark:text-white h-screen w-screen\">\n      <NavBar>\n        <button\n          onClick={() => setTheme(colorTheme)}\n          className=\"flex flex-row rounded-full items-center color-white cursor-pointer active:outline-none  font-semibold hover:bg-black-translucent\"\n        >\n          <DarkModeToggle\n            size={80}\n            onChange={setIsDarkMode}\n            checked={isDarkMode}\n          ></DarkModeToggle>\n        </button>\n      </NavBar>\n      <div className=\"flex flex-col lg:flex-row justify-evenly p-5 dark:bg-darkModeBackground \">\n        <div className=\"flex-left-side mb-10 lg:mb-0\">\n          <div className=\"flex justify-center lg:justify-between items-center mb-6 sm:mb-12\">\n            <form>\n              <select\n                value={country}\n                onChange={onCountryChange}\n                className=\"w-32 bg-transparent border-b-2 border-darkModeBackground dark:border-oddPairWhite p-2 dark:text-white active:border-blue-500 focus:border-blue-500 \"\n              >\n                <option value=\"worldwide\" className=\"text-black\">\n                  Worldwide\n                </option>\n                {countries.map((country, index) => (\n                  <option\n                    key={index}\n                    value={country.value}\n                    className=\"text-black\"\n                  >\n                    {country.name}\n                  </option>\n                ))}\n              </select>\n            </form>\n          </div>\n\n          <div className=\"flex justify-between flex-col sm:flex-row\">\n            <InfoBox\n              onClick={(e) => setCasesType(\"cases\")}\n              title=\"Cases\"\n              active={casesType === \"cases\"}\n              cases={prettyPrint(countryInfo.todayCases)}\n              total={prettyPrint(countryInfo.cases)}\n            ></InfoBox>\n            <InfoBox\n              onClick={(e) => setCasesType(\"recovered\")}\n              title=\"Recovered\"\n              active={casesType === \"recovered\"}\n              cases={prettyPrint(countryInfo.todayRecovered)}\n              total={prettyPrint(countryInfo.recovered)}\n            ></InfoBox>\n            <InfoBox\n              onClick={(e) => setCasesType(\"deaths\")}\n              title=\"Deaths\"\n              active={casesType === \"deaths\"}\n              cases={prettyPrint(countryInfo.todayDeaths)}\n              total={prettyPrint(countryInfo.deaths)}\n            ></InfoBox>\n          </div>\n          <ComponentTransition\n            enterAnimation={[\n              AnimationTypes.scale.enter,\n              // AnimationTypes.fade.enter,\n              {\n                options: {\n                  duration: 300,\n                },\n              },\n            ]}\n            exitAnimation={[\n              AnimationTypes.scale.exit,\n              // AnimationTypes.fade.enter,\n              {\n                options: {\n                  duration: 300,\n                },\n              },\n            ]}\n          >\n            {map}\n          </ComponentTransition>\n        </div>\n        <Card className=\"dark:bg-darkModeCards\">\n          <CardContent className=\"dark:bg-darkModeCards dark:text-white\">\n            <h1 className=\"text-2xl font-bold text-center\">\n              Live Cases by Country\n            </h1>\n\n            <Table countries={tableData} />\n\n            <h1 className=\"text-2xl font-bold mt-5 text-center\">\n              Worldwide New{\" \"}\n              {casesType.charAt(0).toUpperCase() + casesType.substring(1)}\n            </h1>\n            <LineGraph casesType={casesType} />\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from \"react\";\r\n\r\nexport default function useDarkMode() {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const colorTheme = theme === \"dark\" ? \"light\" : \"dark\";\r\n\r\n  useEffect(() => {\r\n    const root = window.document.documentElement;\r\n\r\n    root.classList.remove(colorTheme);\r\n    root.classList.add(theme);\r\n  }, [theme, colorTheme]);\r\n\r\n  return [colorTheme, setTheme];\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"leaflet/dist/leaflet.css\";\nimport App from \"./pages/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}